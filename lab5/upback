#!/bin/bash
regexp="$HOME/Backup-[0-9]{4}-[0-9]{2}-[0-9]{2}$"
newest_backup=-1
newest_backup_folder=-1
for file in ~/*
do
	if [ -d $file ] && [[ $file =~ $regexp ]]
	then
		cur_backup_year="$(echo ${file##*/} | cut -d '-' -f 2)"
		cur_backup_month="$(echo ${file##*/} | cut -d '-' -f 3)"
		cur_backup_day="$(echo ${file##*/} | cut -d '-' -f 4)"
		cur_backup_date="$(date -d "$cur_backup_year-$cur_backup_month-$cur_backup_day" +%s)"
		if [ $newest_backup -lt $cur_backup_date ]
		then
			newest_backup=$cur_backup_date
			newest_backup_folder=$file
		fi
	fi
done
if [ $newest_backup -eq -1 ]
then
	echo "you haven't created backups yet"
	exit 0
else
	regexp=".+\.[0-9]{4}\.[0-9]{2}\.[0-9]{2}$"
	if ! [ -d ~/restore ]
	then
		mkdir ~/restore
	fi
	array=()
	for file in $newest_backup_folder/*
	do
		array+=("$file")
	done
	i=0
	while true
	do
		file=${array[$i]}
		regexp="${file##*/}.*"
		j=$i
		cur_versions=()
		while true
		do
			cur_file=${array[$j]}
			file_name=${cur_file##*/}
			if ! [[ $file_name =~ $regexp ]]
			then
				break
			fi 
			cur_versions+=("$cur_file")
			j=$((j+1))
			if [ $j -eq ${#array[*]} ]
			then
				break
			fi
		done
		echo "which version do you want to restore?"
		for k in ${!cur_versions[@]};
		do
			echo ${cur_versions[$k]}
		done
		version=0
		read version
		cp $version ~/restore
		i=$j
		if [ $i -eq ${#array[*]} ]
		then
			break
		fi
	done
fi

